LinearEquation class
Instance Variables:
private string xy1 - xy-cord 1
private string xy2 - xy-cord 2
private int x1 - x-cord 1
private int x2 - x-cord 2
private int y1 - y-cord 1
private int y2 - y-cord 2
private double slope
private double yIntercept
private String form
private double distance
private double xCoord - input x coordinate

Constructor:
public LinearEquation(string xy1, string xy2)
These values will be from the inputs. Each value will be stored in its corresponding variable.

Methods:
public void getXY()
This method will extract the x and y values and define its corresponding variables.

public double slope()
This method will return the slope by doing (y2-y1)/(x2-x1).

public int yIntercept()
This method will solve for the y-intercept by plugging in one of the x and y coordinate pairs and the slope into
the equation y=mx+b to solve for b. The format of the equation will be b = y-mx.
The method will return b.

public string slopeInterceptForm()
This method will return the equation of the line in y=mx+b. It will use the slope from the slope method and
y-intercept from the yIntercept method.

public int distance()
This method will return the distance between the two points. It will use the equation d=√((x2 – x1)² + (y2 – y1)²).
It will return d.

public void findY()
This method will print the y-coordinate for its corresponding x coordinate that the user inputs. It will use the
y=mx+b formula that was found using th slopeInterceptForm method.
Method will print y.

public void equationRunner()
This method will run all the methods above in order to store all the data in its corresponding variable in order for
it to be printed in the toString method.

public void getCoord(double x)
This method will be used to take the x coordinate that was inputted, call the findY() method, and return the
coordinates for that specific x value.

public String toString()
This method will display all relevant information about this
instance including:
- X and Y coordinate information
- Slope of Line
- Y-Intercept
- Slope Intercept Form equation
- Distance Between Points

Display:
Enter the first (x,y) coordinate point:
Enter the second (x,y) coordinate point:
First pair:
Second pair:
Slope of line:
Y-intercept:
Slope Intercept Form:
Distance Between Points:
Enter an X-Value:
Solved Coordinate Point:


Packages:
Scanner class to receive inputs

EquationRunner.java
Step 1: Ask user to enter first coordinate point
Step 2: Ask user to enter second coordinate point
Step 3: Use slope() to find slope
Step 4: Use yIntercept to find y-intercept
Step 5: Use slopeInterceptForm() to find slope intercept form
Step 6: Use distance() to find distance between the two points
Step 7: Display all information using the toString() method
Step 8: Ask user to enter an x-value
Step 9: Use findY() to print out the corresponding y coordinate to the given x value